                
pipeline {
    environment {
    docker = '/usr/local/bin/docker-compose'
  //  dockerTool = 'docker'  // Use the tool name specified in Jenkins configuration
    
  }
    agent any


    tools {
        nodejs 'NodeJS 14'
        dockerTool 'docker'
    }
 
    stages {
        stage('Cloning Git') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/omarUSJ/devops23.git']]])  
                sh "ls "
                sh "whoami"
                script {
           		 def npmExecutable = tool name: 'NodeJS 14', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
            		 sh "${npmExecutable}/bin/npm install -g npm yarn"
            		 sh "${npmExecutable}/bin/npm install"
       			 }		
                echo 'Project Cloned'
            }
        }

       stage('Docker Build') {
            steps {
                echo 'Building..'
                script {
                    // Build the Docker image using the specified Dockerfile
                    // The image will be tagged as 'dockerdevopstest'
                    sh 'docker build -t dockerdevopstest .'
                }
                echo 'Running...'
            }
        }

    
        stage('Test') {
            steps {
                echo 'Testing..'
                sh 'npm test'
            }
            post {
                success {
                    echo 'Sending email notification...'
                    emailext subject: 'Test Status: SUCCESS',
                              body: 'The tests have passed successfully.',
                              to: 'your.email@example.com'
                }
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
    }
}
